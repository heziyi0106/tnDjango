[資料庫語法]==>在cmd結尾記得補上;
(參見travel/views.py)

myTravel 已宣告嵌入的物件名稱

1.查詢所有欄位資料並依 id欄位 做遞增排序
標準SQL語法： select * from travel order by id
Django語法： myTravel.objects.all().order_by('id')


2.查詢所有欄位資料並依 id欄位 做遞減排序
標準SQL語法： select * from travel order by id desc
Django語法： myTravel.objects.all().order_by('-id')


3.查詢所有欄位資料並依 id欄位和 price 欄位 做遞增排序
標準SQL語法： select * from travel order by id,price
Django語法： myTravel.objects.all().order_by('id','price')


4.查詢標題是「金門風獅爺」 的資料 (有可能有此資料(必只有這5個字才能被找出)，若可能沒有這個資料時，django 用 filter)
標準SQL語法： select * from travel where title = '金門風獅爺'
Django語法： myTravel.objects.filter(title='金門風獅爺')


5.查詢欄位 id 是12 的資料，指獲取單條資料時抓用，且這個資料一定要存在，才可以使用 get
標準SQL語法： select * from travel where id = 12
Django語法： myTravel.objects.get(id=12)


6.查詢 price 價格 大於 5000元的資料
標準SQL語法： select * from travel where price > 5000
Django語法： myTravel.objects.filter(price__gt=5000) #大於 greater than(不包含5000)


7.查詢 price 價格 大於等於 5000元的資料
標準SQL語法： select * from travel where price >= 5000
Django語法： myTravel.objects.filter(price__gte=5000)


8.查詢 price 價格 小於 5000元的資料
標準SQL語法： select * from travel where price < 5000
Django語法： myTravel.objects.filter(price__lt=5000) #小於 5000


9.查詢 price 價格 小於等於 5000元的資料
標準SQL語法： select * from travel where price >= 5000
Django語法： myTravel.objects.filter(price__lte=5000)


10.查詢 price 價格 大於 1500元 且 小於 4000元的資料
標準SQL語法： select * from travel where price > 1500 and price < 4000
Django語法： myTravel.objects.filter(price__gt=1500,price__lt=4000)
衍伸： select title,price from travel where price between 3000 and 5000 order by price; [介於兩金額之間的排序]


11.查詢 price 價格包含 1000  2000  3000 的資料
標準SQL語法： select * from travel where price in(1000,2000,3000)
Django語法： myTravel.objects.filter(price__in=[1000,2000,3000])


[關鍵字查詢]

12.查詢標題裡面有：「澎湖」 關鍵字的資料就要顯示出來
標準SQL語法： select * from travel where title like '%澎湖%'
Django語法： myTravel.objects.filter(title__contains='澎湖')



13.查詢標題開頭是：「澎湖」 的資料就要顯示出來
資料有如下：

澎湖人很Good
我是澎湖人
大家喜歡去澎湖玩

會出來的只有：澎湖人很Good

標準SQL語法： select * from travel where title like '澎湖%'
Django語法： myTravel.objects.filter(title__startswith='澎湖')



14.查詢標題結尾是：「澎湖」 的資料就要顯示出來
資料有如下：

澎湖人很Good
我是澎湖
大家喜歡去澎湖玩

會出來的只有：我是澎湖

標準SQL語法： select * from travel where title like '%澎湖'
Django語法： myTravel.objects.filter(title__endswith='澎湖')



15.查詢資料，並只顯示五筆資料
limit 這個語法只限mysql 相關資料庫使用
mssql 不能使用，要用： top ==> select top 5 * from travel

標準SQL語法： select * from travel limit 5
Django語法： myTravel.objects.all()[:5]
衍伸： select (id, )title, price from travel order by id limit (0,)10; (索引值從0開始，抓n筆)


16.查詢標題結尾是：「澎湖」 的資料顯示6筆出來
資料有如下：

澎湖人很Good
我是澎湖
大家喜歡去澎湖玩

會出來的只有：我是澎湖

標準SQL語法： select * from travel where title like '%澎湖' limit 6
Django語法： myTravel.objects.filter(title__contains='澎湖')[:6]



17.查詢資料欄位是否為空值：=> null

標準SQL語法： select * from travel where create_date is null
Django語法： myTravel.objects.filter(create_date__isnull=True)


18.在資料庫進行運算，再取出(只有當下會有計算，並不會回存資料庫)
標準SQL語法： select title, price, price * 0.8 as discount from travel where price <= 4000; [先拿出數值做簡單運算，就可以直接給前台拿到運算後的資料==>讓前台直接取出打折後的價格]

19.修改資料表內的資料(需下條件式)==>危險權限
	update travel set price=6666 where id=1; [修改id=1僅一筆資料]
	update travel set price = 6688, title = '最大水上樂園，絕對不能錯過大家的泳裝派對!' where id = 1; [修改價格跟標題兩個欄位]

20.刪除資料表的內容
	delete from travel where id=1; [刪除id=1的資料]
	